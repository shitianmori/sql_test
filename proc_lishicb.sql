create or replace procedure proc_lishicb (
  v_number in number
)is
begin
DECLARE
  CURSOR CUR_LISHICB IS
  SELECT
    CRUD_TYPE,
    IS_USED,
    I_BENCICM,
    I_CHAOBIAOBZ,
    I_CHAOBIAON,
    I_CHAOBIAOY,
    I_ZHANGWUNY,
    I_CHAOBIAOID,
    I_CHAOJIANSL,
    I_KAIZHANGSL,
    I_YONGSHUIL,
    I_ZHENSHICM,
    I_ZHUANGTAI,
    N_KAIZHANGJE,
    N_NIANLEIJIL,
    S_CH,
    S_CHAOBIAOY,
    S_DZ,
    S_ST,
    S_USERID,
    ID,
    D_CHAOBIAO,
    D_HUICHUANSJ
  FROM TMP_SG_LISHICB WHERE IS_USED = 0 and rownum<=v_number  AND D_HUICHUANSJ IS NOT NULL;
  V_ID TMP_SG_LISHICB.ID%TYPE;
  V_TYPE TMP_SG_LISHICB.CRUD_TYPE%TYPE;
  IS_EXIST INTEGER := 0;
BEGIN
FOR V_LISHICB IN CUR_LISHICB LOOP
  V_ID := V_LISHICB.ID;
  V_TYPE := V_LISHICB.CRUD_TYPE;
  IF V_TYPE = 1 THEN
    SELECT COUNT(*) INTO IS_EXIST FROM SG_CHAOBIAOSJ WHERE S_USERID = V_LISHICB.S_USERID AND I_ZHANGWUNY = V_LISHICB.I_ZHANGWUNY AND I_CHAOBIAOID = V_LISHICB.I_CHAOBIAOID;
    IF IS_EXIST = 0 THEN
      -- INSERT DATA
      INSERT INTO SG_CHAOBIAOSJ
      (
        D_CHAOBIAO,
        I_BENCICM,
        I_CHAOBIAOBZ,
        I_CHAOBIAON,
        I_CHAOBIAOY,
        I_ZHANGWUNY,
        I_CHAOBIAOID,
        I_CHAOJIANSL,
        I_KAIZHANGSL,
        I_YONGSHUIL,
        I_ZHENSHICM,
        I_ZHUANGTAI,
        N_KAIZHANGJE,
        N_NIANLEIJIL,
        S_CH,
        S_CHAOBIAOY,
        S_DZ,
        S_ST,
        S_USERID
      ) VALUES
      (
        V_LISHICB.D_CHAOBIAO,
        V_LISHICB.I_BENCICM,
        V_LISHICB.I_CHAOBIAOBZ,
        V_LISHICB.I_CHAOBIAON,
        V_LISHICB.I_CHAOBIAOY,
        V_LISHICB.I_ZHANGWUNY,
        V_LISHICB.I_CHAOBIAOID,
        V_LISHICB.I_CHAOJIANSL,
        V_LISHICB.I_KAIZHANGSL,
        V_LISHICB.I_YONGSHUIL,
        V_LISHICB.I_ZHENSHICM,
        V_LISHICB.I_ZHUANGTAI,
        V_LISHICB.N_KAIZHANGJE,
        V_LISHICB.N_NIANLEIJIL,
        V_LISHICB.S_CH,
        V_LISHICB.S_CHAOBIAOY,
        V_LISHICB.S_DZ,
        V_LISHICB.S_ST,
        V_LISHICB.S_USERID
      );
      --DBMS_OUTPUT.PUT_LINE('添加历史抄表数据');
      -- UPDATE IS_USER
      UPDATE TMP_SG_LISHICB SET IS_USED = 1 WHERE ID = V_ID;
    ELSE
      UPDATE TMP_SG_LISHICB SET IS_USED = -1 WHERE ID = V_ID;
    END IF;
  ELSIF V_TYPE = 2 THEN
    -- ALTER DATA
    UPDATE SG_CHAOBIAOSJ SET
      D_CHAOBIAO = V_LISHICB.D_CHAOBIAO,
      I_BENCICM = V_LISHICB.I_BENCICM,
      I_CHAOBIAOBZ = V_LISHICB.I_CHAOBIAOBZ,
      I_CHAOBIAON = V_LISHICB.I_CHAOBIAON,
      I_CHAOBIAOY = V_LISHICB.I_CHAOBIAOY,
      I_ZHANGWUNY = V_LISHICB.I_ZHANGWUNY,
      I_CHAOBIAOID = V_LISHICB.I_CHAOBIAOID,
      I_CHAOJIANSL = V_LISHICB.I_CHAOJIANSL,
      I_KAIZHANGSL = V_LISHICB.I_KAIZHANGSL,
      I_YONGSHUIL = V_LISHICB.I_YONGSHUIL,
      I_ZHENSHICM = V_LISHICB.I_ZHENSHICM,
      I_ZHUANGTAI = V_LISHICB.I_ZHUANGTAI,
      N_KAIZHANGJE = V_LISHICB.N_KAIZHANGJE,
      N_NIANLEIJIL = V_LISHICB.N_NIANLEIJIL,
      S_CH = V_LISHICB.S_CH,
      S_CHAOBIAOY = V_LISHICB.S_CHAOBIAOY,
      S_DZ = V_LISHICB.S_DZ,
      S_ST = V_LISHICB.S_ST
    WHERE S_USERID = V_LISHICB.S_USERID AND I_ZHANGWUNY = V_LISHICB.I_ZHANGWUNY AND I_CHAOBIAOID = V_LISHICB.I_CHAOBIAOID;
    --DBMS_OUTPUT.PUT_LINE('修改历史抄表数据');
    -- UPDATE IS_USER
    UPDATE TMP_SG_LISHICB SET IS_USED = 1 WHERE ID = V_ID;
  ELSIF V_TYPE = 3 THEN
    -- DELETE DATA
    DELETE FROM SG_CHAOBIAOSJ WHERE S_USERID = V_LISHICB.S_USERID AND I_ZHANGWUNY = V_LISHICB.I_ZHANGWUNY AND I_CHAOBIAOID = V_LISHICB.I_CHAOBIAOID;
    --DBMS_OUTPUT.PUT_LINE('删除历史抄表数据');
    -- UPDATE IS_USER
    UPDATE TMP_SG_LISHICB SET IS_USED = 1 WHERE ID = V_ID;
  ELSE
    DBMS_OUTPUT.PUT_LINE('数据不可用或没有对应的数据操作类型CRUD_TYPE' || V_LISHICB.CRUD_TYPE);
  END IF;
END LOOP;
--DELETE  TMP_SG_LISHICB where sysdate-7>d_huichuansj AND IS_USED =1;
end;
END;
/
